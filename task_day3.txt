REPORT ZRH_TASK3.

TYPES: BEGIN OF TY_PERSON,
         EMRI_MBIEMRI TYPE C LENGTH 30,
         POZICIONI    TYPE C LENGTH 30,
         KOMPANIA     TYPE C LENGTH 30,
         SHTETI       TYPE C LENGTH 30,
         PAGA_BRUTO   TYPE I,
         PAGA_NET     TYPE I,
       END OF TY_PERSON.

DATA: GS_PERSON TYPE TY_PERSON,
      GT_PERSON TYPE STANDARD TABLE OF TY_PERSON.

GS_PERSON-EMRI_MBIEMRI = 'Maria Anders'.
GS_PERSON-POZICIONI = 'CEO'.
GS_PERSON-KOMPANIA = 'SAP'.
GS_PERSON-SHTETI = 'Germany'.
GS_PERSON-PAGA_BRUTO = 40000.
GS_PERSON-PAGA_NET = 0.
APPEND GS_PERSON TO GT_PERSON.
CLEAR GS_PERSON.

GS_PERSON-EMRI_MBIEMRI = 'Francisco Chang'.
GS_PERSON-POZICIONI = 'IT'.
GS_PERSON-KOMPANIA = 'APPLE'.
GS_PERSON-SHTETI = 'Italy'.
GS_PERSON-PAGA_BRUTO = 30000.
GS_PERSON-PAGA_NET = 0.
APPEND GS_PERSON TO GT_PERSON.
CLEAR GS_PERSON.

GS_PERSON-EMRI_MBIEMRI = 'Roland Mendel'.
GS_PERSON-POZICIONI = 'CEO'.
GS_PERSON-KOMPANIA = 'APPLE'.
GS_PERSON-SHTETI = 'Austria'.
GS_PERSON-PAGA_BRUTO = 50000.
GS_PERSON-PAGA_NET = 0.
APPEND GS_PERSON TO GT_PERSON.
CLEAR GS_PERSON.

GS_PERSON-EMRI_MBIEMRI = 'Helen Bennett'.
GS_PERSON-POZICIONI = 'IT'.
GS_PERSON-KOMPANIA = 'ENEL'.
GS_PERSON-SHTETI = 'Italy'.
GS_PERSON-PAGA_BRUTO = 35000.
GS_PERSON-PAGA_NET = 0.
APPEND GS_PERSON TO GT_PERSON.
CLEAR GS_PERSON.

GS_PERSON-EMRI_MBIEMRI = 'Yoshi Tannamuri'.
GS_PERSON-POZICIONI = 'Finance'.
GS_PERSON-KOMPANIA = 'SAP'.
GS_PERSON-SHTETI = 'Germany'.
GS_PERSON-PAGA_BRUTO = 30000.
GS_PERSON-PAGA_NET = 0.
APPEND GS_PERSON TO GT_PERSON.
CLEAR GS_PERSON.

DELETE GT_PERSON WHERE POZICIONI = 'Finance' .

DATA: GV_COUNT        TYPE I,
      GV_COUNT1       TYPE I,
      GV_TOTALNETO    TYPE I,
      GV_MESATARE1    TYPE P LENGTH 16 DECIMALS 10,
      GV_COUNT2       TYPE I,
      GV_TOTALNETOALL TYPE I,
      GV_MESATARE2    TYPE P LENGTH 16 DECIMALS 10.



LOOP   AT GT_PERSON INTO GS_PERSON.

  CASE GS_PERSON-POZICIONI.
    WHEN 'CEO' OR 'IT' .

      GV_COUNT = 1 + GV_COUNT.

  ENDCASE.

  CASE GS_PERSON-KOMPANIA.
    WHEN 'SAP'.

      WRITE: 'indeksi per kompanine SAP eshte' , SY-TABIX.

  ENDCASE.

  CASE GS_PERSON-SHTETI.

    WHEN 'Italy'.

      GS_PERSON-PAGA_NET = GS_PERSON-PAGA_BRUTO - ( ( GS_PERSON-PAGA_BRUTO * 30 ) / 100 ).

    WHEN 'Germany'.

      GS_PERSON-PAGA_NET = GS_PERSON-PAGA_BRUTO - ( ( GS_PERSON-PAGA_BRUTO * 35 ) / 100 ).

    WHEN 'Austria'.

      GS_PERSON-PAGA_NET = GS_PERSON-PAGA_BRUTO - ( ( GS_PERSON-PAGA_BRUTO * 40 ) / 100 ).



  ENDCASE.
  MODIFY GT_PERSON FROM GS_PERSON.

  CASE GS_PERSON-SHTETI.

    WHEN 'Italy'.

      GV_COUNT1 = 1 + GV_COUNT1.
      GV_TOTALNETO = GS_PERSON-PAGA_NET + GV_TOTALNETO.

  ENDCASE.



  GV_COUNT2 = 1 + GV_COUNT2.
  GV_TOTALNETOALL = GS_PERSON-PAGA_NET + GV_TOTALNETOALL.





ENDLOOP.




GV_MESATARE1 = GV_TOTALNETO / GV_COUNT1.
GV_MESATARE2 = GV_TOTALNETOALL /  GV_COUNT2.

WRITE: 'PERSONAT TE CILEVE KANE POZICION SI IT OSE CEO JANE ' ,GV_COUNT.
ULINE.
WRITE: 'Vlera mesatare e pages neto per shtetin italian eshte ' ,GV_MESATARE1.
ULINE.
WRITE: 'Vlera mesatare e pages neto per per te gjitha shtetet eshte ' ,GV_MESATARE2.
ULINE.

LOOP AT GT_PERSON INTO GS_PERSON.
  WRITE:/
  GS_PERSON-EMRI_MBIEMRI ,
  GS_PERSON-POZICIONI ,
  GS_PERSON-KOMPANIA ,
  GS_PERSON-SHTETI ,
  GS_PERSON-PAGA_BRUTO ,
  GS_PERSON-PAGA_NET .

ENDLOOP.